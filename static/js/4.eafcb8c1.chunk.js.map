{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/DialogMessage/DialogMessage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","c","dialog","to","dialogId","name","DialogMessage","text","maxLength50","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","DialogsContainer","compose","connect","state","dialogs","dialogsPage","messages","newMessageText","sendMessageThunkCreator","withAuthRedirect","map","el","key","id","values","newMessageBody"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,oBCAhLD,EAAOC,QAAU,CAAC,OAAS,6B,wGCGdC,EAAa,SAACC,GACzB,OACE,yBAAKC,UAAWC,IAAEC,QAChB,kBAAC,IAAD,CAASC,GAAE,kBAAaJ,EAAMK,WAAaL,EAAMM,QCJ1CC,EAAgB,SAACP,GAC5B,OAAO,yBAAKC,UAAU,WAAWD,EAAMQ,O,kCCyBnCC,EAAcC,YAAiB,IAiB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAfL,SAACZ,GACtB,OAAO,0BAAMc,SAAUd,EAAMe,cAC3B,6BACE,kBAACC,EAAA,EAAD,CACEV,KAAK,iBACLW,UAAWC,IACXC,SAAU,CAACC,IAASX,GACpBY,YAAY,wBAEhB,6BACE,6C,iCC3BAC,EAAmBC,YACvBC,aAToB,SAACC,GACrB,MAAO,CACLC,QAASD,EAAME,YAAYD,QAC3BE,SAAUH,EAAME,YAAYC,SAC5BC,eAAgBJ,EAAME,YAAYE,kBAKX,CAACC,8BAC1BC,IAFuBR,EDNF,SAACvB,GAMtB,OACE,yBAAKC,UAAWC,IAAEwB,SAChB,yBAAKzB,UAAU,eACZD,EAAM0B,QAAQM,KAAI,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAYC,IAAKD,EAAGE,GAAI9B,SAAU4B,EAAGE,GAAI7B,KAAM2B,EAAG3B,WAE7E,yBAAKL,UAAU,YACb,6BAAMD,EAAM4B,SAASI,KAAI,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAeC,IAAKD,EAAGE,GAAI3B,KAAMyB,EAAGzB,WACnE,6BACE,kBAACG,EAAD,CAAqBG,SAZP,SAACsB,GACrBpC,EAAM8B,wBAAwBM,EAAOC,yBCQ1Bf","file":"static/js/4.eafcb8c1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__hQxL-\",\"dialogItems\":\"Dialogs_dialogItems__bV3Na\",\"dialog\":\"Dialogs_dialog__1aGHG\",\"messages\":\"Dialogs_messages__3tJKJ\",\"message\":\"Dialogs_message__3R2JF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__29PWZ\"};","import React from 'react';\r\nimport c from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const DialogItem = (props) => {\r\n  return (\r\n    <div className={c.dialog}>\r\n      <NavLink to={`dialogs/${props.dialogId}`}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n// import c from './DialogItem.module.css';\r\n\r\nexport const DialogMessage = (props) => {\r\n  return <div className=\"message\">{props.text}</div>\r\n}\r\n","import React from 'react';\r\nimport c from './Dialogs.module.css';\r\nimport { DialogItem } from './DialogItem/DialogItem';\r\nimport { DialogMessage } from './DialogMessage/DialogMessage';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport { Textarea } from '../common/formsControls/FormsControls';\r\nimport { required, maxLengthCreator } from '../../utils/validators';\r\n\r\nexport const Dialogs = (props) => {\r\n\r\n  const addNewMessage = (values) => {\r\n    props.sendMessageThunkCreator(values.newMessageBody);\r\n  }\r\n\r\n  return (\r\n    <div className={c.dialogs}>\r\n      <div className='dialogItems'>\r\n        {props.dialogs.map(el => <DialogItem key={el.id} dialogId={el.id} name={el.name}/>)}\r\n      </div>\r\n      <div className='messages'> \r\n        <div>{props.messages.map(el => <DialogMessage key={el.id} text={el.text}/>)}</div>\r\n        <div>\r\n          <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit}>\r\n    <div>\r\n      <Field \r\n        name='newMessageBody' \r\n        component={Textarea} \r\n        validate={[required,maxLength50]}\r\n        placeholder='Enter your message'/>\r\n    </div>\r\n    <div>\r\n      <button>Send</button>\r\n    </div>\r\n  </form>\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\r\n\r\n","import {Dialogs} from './Dialogs';\r\nimport { sendMessageThunkCreator } from '../../redux/dialogReducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogs: state.dialogsPage.dialogs,\r\n    messages: state.dialogsPage.messages,\r\n    newMessageText: state.dialogsPage.newMessageText,\r\n  }\r\n}\r\n\r\nconst DialogsContainer = compose(\r\n  connect(mapStateToProps, {sendMessageThunkCreator}),\r\n  withAuthRedirect\r\n)(Dialogs);\r\n\r\nexport default DialogsContainer;\r\n"],"sourceRoot":""}